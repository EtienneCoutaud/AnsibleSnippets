<snippet>
<content><![CDATA[
${1:#dest = absolute path of where to download the file to. If `dest' is a directory, either the server provided filename or, if none provided, the base name of the URL on the remote server will be used. If a directory, `force' has no effect. If `dest' is a directory, the file will always be downloaded (regardless of the force option), but replaced only if the contents changed.
#force = If `yes' and `dest' is not a directory, will download the file every time and replace the file if the contents change. If `no', the file will only be downloaded if the destination does not exist. Generally should be `yes' only for small local files. Prior to 0.6, this module behaved as if `yes' was the default.
#others = all arguments accepted by the [file] module also work here
#sha256sum = If a SHA-256 checksum is passed to this parameter, the digest of the destination file will be calculated after it is downloaded to ensure its integrity and verify that the transfer completed successfully.
#timeout = Timeout for URL request
#url = HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path
#url_password = The password for use in HTTP basic authentication. If the `url_username' parameter is not specified, the `url_password' parameter will not be used.
#url_username = The username for use in HTTP basic authentication. This parameter can be used without `url_password' for sites that allow empty passwords.
#use_proxy = if `no', it will not use a proxy, even if one is defined in an environment variable on the target hosts.
#validate_certs = If `no', SSL certificates will not be validated. This should only be used on personally controlled sites using self-signed certificates.
}- name: ${2:Name for get_url module.}
${3:  sudo: ${4:yes}}
  get_url: ${5:dest=${6: } }${7:force=${8: } }${9:others=${10: } }${11:sha256sum=${12: } }${13:timeout=${14: } }${15:url=${16: } }${17:url_password=${18: } }${19:url_username=${20: } }${21:use_proxy=${22: } }${23:validate_certs=${24: } }
${25:  when: ${26: variable is defined}}
${27:  with_items: ${28: array}}
]]></content>
	<tabTrigger>get_url</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
