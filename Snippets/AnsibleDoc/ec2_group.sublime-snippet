<snippet>
<content><![CDATA[
${1:#aws_access_key = AWS access key. If not set then the value of the AWS_ACCESS_KEY environment variable is used.
#aws_secret_key = AWS secret key. If not set then the value of the AWS_SECRET_KEY environment variable is used.
#description = Description of the security group.
#ec2_url = Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Must be specified if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used
#name = Name of the security group.
#profile = uses a boto profile. Only works with boto >= 2.24.0
#purge_rules = Purge existing rules on security group that are not found in rules
#purge_rules_egress = Purge existing rules_egree on security group that are not found in rules_egress
#region = the EC2 region to use
#rules = List of firewall inbound rules to enforce in this group (see example).
#rules_egress = List of firewall outbound rules to enforce in this group (see example).
#security_token = security token to authenticate against AWS
#state = Create or delete a security group
#validate_certs = When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
#vpc_id = ID of the VPC to create the group in.
}- name: ${2:Name for ec2_group module.}
${3:  sudo: ${4:yes}}
  ec2_group: ${5:aws_access_key=${6: } }${7:aws_secret_key=${8: } }${9:description=${10: } }${11:ec2_url=${12: } }${13:name=${14: } }${15:profile=${16: } }${17:purge_rules=${18: } }${19:purge_rules_egress=${20: } }${21:region=${22: } }${23:rules=${24: } }${25:rules_egress=${26: } }${27:security_token=${28: } }${29:state=${30: } }${31:validate_certs=${32: } }${33:vpc_id=${34: } }
${35:  when: ${36: variable is defined}}
${37:  with_items: ${38: array}}
]]></content>
	<tabTrigger>ec2_group</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
