<snippet>
<content><![CDATA[
${1:#aws_access_key = AWS access key. If not set then the value of the AWS_ACCESS_KEY environment variable is used.
#aws_secret_key = AWS secret key. If not set then the value of the AWS_SECRET_KEY environment variable is used.
#ec2_url = Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Must be specified if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used
#in_vpc = allocate an EIP inside a VPC or not
#instance_id = The EC2 instance id
#profile = uses a boto profile. Only works with boto >= 2.24.0
#public_ip = The elastic IP address to associate with the instance. If absent, allocate a new address
#region = the EC2 region to use
#reuse_existing_ip_allowed = Reuse an EIP that is not associated to an instance (when available), instead of allocating a new one.
#security_token = security token to authenticate against AWS
#state = If present, associate the IP with the instance. If absent, disassociate the IP with the instance.
#validate_certs = When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
#wait_timeout = how long to wait in seconds for newly provisioned EIPs to become available
}- name: ${2:Name for ec2_eip module.}
${3:  sudo: ${4:yes}}
  ec2_eip: ${5:aws_access_key=${6: } }${7:aws_secret_key=${8: } }${9:ec2_url=${10: } }${11:in_vpc=${12: } }${13:instance_id=${14: } }${15:profile=${16: } }${17:public_ip=${18: } }${19:region=${20: } }${21:reuse_existing_ip_allowed=${22: } }${23:security_token=${24: } }${25:state=${26: } }${27:validate_certs=${28: } }${29:wait_timeout=${30: } }
${31:  when: ${32: variable is defined}}
${33:  with_items: ${34: array}}
]]></content>
	<tabTrigger>ec2_eip</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
