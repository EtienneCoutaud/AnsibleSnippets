<snippet>
<content><![CDATA[
${1:#archive = Mirrors the rsync archive flag, enables recursive, links, perms, times, owner, group flags and -D.
#checksum = Skip based on checksum, rather than mod-time & size; Note that that "archive" option is still enabled by default - the "checksum" option will not disable it.
#compress = Compress file data during the transfer. In most cases, leave this enabled unless it causes problems.
#copy_links = Copy symlinks as the item that they point to (the referent) is copied, rather than the symlink.
#delete = Delete files that don't exist (after transfer, not before) in the `src' path. This option requires `recursive=yes'.
#dest = Path on the destination machine that will be synchronized from the source; The path can be absolute or relative.
#dest_port = Port number for ssh on the destination host. The ansible_ssh_port inventory var takes precedence over this value.
#dirs = Transfer directories without recursing
#existing_only = Skip creating new files on receiver.
#group = Preserve group
#links = Copy symlinks as symlinks.
#mode = Specify the direction of the synchronization. In push mode the localhost or delegate is the source; In pull mode the remote host in context is the source.
#owner = Preserve owner (super user only)
#perms = Preserve permissions.
#recursive = Recurse into directories.
#rsync_opts = Specify additional rsync options by passing in an array.
#rsync_path = Specify the rsync command to run on the remote machine. See `--rsync-path' on the rsync man page.
#rsync_timeout = Specify a --timeout for the rsync command in seconds.
#set_remote_user = put user@ for the remote paths. If you have a custom ssh config to define the remote user for a host that does not match the inventory user, you should set this parameter to "no".
#src = Path on the source machine that will be synchronized to the destination; The path can be absolute or relative.
#times = Preserve modification times
}- name: ${2:Name for synchronize module.}
${3:  sudo: ${4:yes}}
  synchronize: ${5:archive=${6: } }${7:checksum=${8: } }${9:compress=${10: } }${11:copy_links=${12: } }${13:delete=${14: } }${15:dest=${16: } }${17:dest_port=${18: } }${19:dirs=${20: } }${21:existing_only=${22: } }${23:group=${24: } }${25:links=${26: } }${27:mode=${28: } }${29:owner=${30: } }${31:perms=${32: } }${33:recursive=${34: } }${35:rsync_opts=${36: } }${37:rsync_path=${38: } }${39:rsync_timeout=${40: } }${41:set_remote_user=${42: } }${43:src=${44: } }${45:times=${46: } }
${47:  when: ${48: variable is defined}}
${49:  with_items: ${50: array}}
]]></content>
	<tabTrigger>synchronize</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
