<snippet>
<content><![CDATA[
${1:#accept_hostkey = if `yes', adds the hostkey for the repo url if not already added. If ssh_args contains "-o StrictHostKeyChecking=no", this parameter is ignored.
#bare = if `yes', repository will be created as a bare repo, otherwise it will be a standard repo with a workspace.
#depth = Create a shallow clone with a history truncated to the specified number or revisions. The minimum possible value is `1', otherwise ignored.
#dest = Absolute path of where the repository should be checked out to. This parameter is required, unless `update' is set to `no' This change was made in version 1.8. Prior to this version, the `dest' parameter was always required.
#executable = Path to git executable to use. If not supplied, the normal mechanism for resolving binary paths will be used.
#force = If `yes', any modified files in the working repository will be discarded.  Prior to 0.7, this was always 'yes' and could not be disabled.
#key_file = Specify an optional private key file to use for the checkout.
#recursive = if `no', repository will be cloned without the --recursive option, skipping sub-modules.
#reference = Reference repository (see "git clone --reference ...")
#remote = Name of the remote.
#repo = git, SSH, or HTTP protocol address of the git repository.
#ssh_opts = Creates a wrapper script and exports the path as GIT_SSH which git then automatically uses to override ssh arguments. An example value could be "-o StrictHostKeyChecking=no"
#track_submodules = if `yes', submodules will track the latest commit on their master branch (or other branch specified in .gitmodules).  If `no', submodules will be kept at the revision specified by the main project. This is equivalent to specifying the --remote flag to git submodule update.
#update = If `no', just returns information about the repository without updating.
#version = What version of the repository to check out.  This can be the full 40-character `SHA-1' hash, the literal string `HEAD', a branch name, or a tag name.
}- name: ${2:Name for git module.}
${3:  sudo: ${4:yes}}
  git: ${5:accept_hostkey=${6: } }${7:bare=${8: } }${9:depth=${10: } }${11:dest=${12: } }${13:executable=${14: } }${15:force=${16: } }${17:key_file=${18: } }${19:recursive=${20: } }${21:reference=${22: } }${23:remote=${24: } }${25:repo=${26: } }${27:ssh_opts=${28: } }${29:track_submodules=${30: } }${31:update=${32: } }${33:version=${34: } }
${35:  when: ${36: variable is defined}}
${37:  with_items: ${38: array}}
]]></content>
	<tabTrigger>git</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
