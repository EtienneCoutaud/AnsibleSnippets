<snippet>
<content><![CDATA[
${1:#aws_access_key = AWS access key. If not set then the value of the AWS_ACCESS_KEY environment variable is used.
#aws_secret_key = AWS secret key. If not set then the value of the AWS_SECRET_KEY environment variable is used.
#ec2_elbs = List of ELB names, required for registration. The ec2_elbs fact should be used if there was a previous de-register.
#ec2_url = Url to use to connect to EC2 or your Eucalyptus cloud (by default the module will use EC2 endpoints).  Must be specified if region is not used. If not set then the value of the EC2_URL environment variable, if any, is used
#enable_availability_zone = Whether to enable the availability zone of the instance on the target ELB if the availability zone has not already been enabled. If set to no, the task will fail if the availability zone is not enabled on the ELB.
#instance_id = EC2 Instance ID
#profile = uses a boto profile. Only works with boto >= 2.24.0
#region = The AWS region to use. If not specified then the value of the EC2_REGION environment variable, if any, is used.
#security_token = security token to authenticate against AWS
#state = register or deregister the instance
#validate_certs = When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
#wait = Wait for instance registration or deregistration to complete successfully before returning.
#wait_timeout = Number of seconds to wait for an instance to change state. If 0 then this module may return an error if a transient error occurs. If non-zero then any transient errors are ignored until the timeout is reached. Ignored when wait=no.
}- name: ${2:Name for ec2_elb module.}
${3:  sudo: ${4:yes}}
  ec2_elb: ${5:aws_access_key=${6: } }${7:aws_secret_key=${8: } }${9:ec2_elbs=${10: } }${11:ec2_url=${12: } }${13:enable_availability_zone=${14: } }${15:instance_id=${16: } }${17:profile=${18: } }${19:region=${20: } }${21:security_token=${22: } }${23:state=${24: } }${25:validate_certs=${26: } }${27:wait=${28: } }${29:wait_timeout=${30: } }
${31:  when: ${32: variable is defined}}
${33:  with_items: ${34: array}}
]]></content>
	<tabTrigger>ec2_elb</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
