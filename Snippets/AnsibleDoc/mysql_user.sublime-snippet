<snippet>
<content><![CDATA[
${1:#append_privs = Append the privileges defined by priv to the existing ones for this user instead of overwriting existing ones.
#check_implicit_admin = Check if mysql allows login as root/nopassword before trying supplied credentials.
#host = the 'host' part of the MySQL username
#login_host = Host running the database
#login_password = The password used to authenticate with
#login_port = Port of the MySQL server
#login_unix_socket = The path to a Unix domain socket for local connections
#login_user = The username used to authenticate with
#name = name of the user (role) to add or remove
#password = set the user's password
#priv = MySQL privileges string in the format: `db.table:priv1,priv2'
#state = Whether the user should exist.  When `absent', removes the user.
}- name: ${2:Name for mysql_user module.}
${3:  sudo: ${4:yes}}
  mysql_user: ${5:append_privs=${6: } }${7:check_implicit_admin=${8: } }${9:host=${10: } }${11:login_host=${12: } }${13:login_password=${14: } }${15:login_port=${16: } }${17:login_unix_socket=${18: } }${19:login_user=${20: } }${21:name=${22: } }${23:password=${24: } }${25:priv=${26: } }${27:state=${28: } }
${29:  when: ${30: variable is defined}}
${31:  with_items: ${32: array}}
]]></content>
	<tabTrigger>mysql_user</tabTrigger>
	<scope>source.yaml,source.ansible</scope>
</snippet>
